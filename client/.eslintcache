[{"/Users/joeyp/Development/twitch-project/client/src/index.tsx":"1","/Users/joeyp/Development/twitch-project/client/src/App.tsx":"2","/Users/joeyp/Development/twitch-project/client/src/store/rootStore.ts":"3","/Users/joeyp/Development/twitch-project/client/src/store/genre/GenreReducer.ts":"4","/Users/joeyp/Development/twitch-project/client/src/store/genre/models/actions.ts":"5","/Users/joeyp/Development/twitch-project/client/src/containers/Sidebar.tsx":"6","/Users/joeyp/Development/twitch-project/client/src/store/genre/GenreAction.ts":"7","/Users/joeyp/Development/twitch-project/client/src/store/genre/models/Genre.ts":"8","/Users/joeyp/Development/twitch-project/client/src/components/GenreCard.tsx":"9","/Users/joeyp/Development/twitch-project/client/src/components/Navbar.tsx":"10","/Users/joeyp/Development/twitch-project/client/src/components/ProducerSearch.tsx":"11","/Users/joeyp/Development/twitch-project/client/src/components/GenreSearch.tsx":"12","/Users/joeyp/Development/twitch-project/client/src/containers/BodyContainer.tsx":"13","/Users/joeyp/Development/twitch-project/client/src/containers/ContributionsContainer.tsx":"14","/Users/joeyp/Development/twitch-project/client/src/containers/AudioContainer.tsx":"15","/Users/joeyp/Development/twitch-project/client/src/components/AudioCard.tsx":"16","/Users/joeyp/Development/twitch-project/client/src/components/ContributionCard.tsx":"17","/Users/joeyp/Development/twitch-project/client/src/store/audio/AudioReducer.ts":"18","/Users/joeyp/Development/twitch-project/client/src/store/audio/models/actions.ts":"19","/Users/joeyp/Development/twitch-project/client/src/store/audio/AudioAction.ts":"20","/Users/joeyp/Development/twitch-project/client/src/store/producer/ProducerReducer.ts":"21","/Users/joeyp/Development/twitch-project/client/src/store/producer/ProducerAction.ts":"22","/Users/joeyp/Development/twitch-project/client/src/store/producer/models/actions.ts":"23","/Users/joeyp/Development/twitch-project/client/src/store/contribution/ContributionReducer.ts":"24","/Users/joeyp/Development/twitch-project/client/src/store/contribution/models/actions.ts":"25","/Users/joeyp/Development/twitch-project/client/src/store/contribution/ContributionAction.ts":"26","/Users/joeyp/Development/twitch-project/client/src/components/CreateContributionForm.tsx":"27","/Users/joeyp/Development/twitch-project/client/src/components/AudioList.tsx":"28","/Users/joeyp/Development/twitch-project/client/src/store/audio/models/Audio.ts":"29"},{"size":296,"mtime":1610243676832,"results":"30","hashOfConfig":"31"},{"size":1078,"mtime":1610306725769,"results":"32","hashOfConfig":"31"},{"size":795,"mtime":1610256252770,"results":"33","hashOfConfig":"31"},{"size":809,"mtime":1610243676833,"results":"34","hashOfConfig":"31"},{"size":619,"mtime":1610254283718,"results":"35","hashOfConfig":"31"},{"size":2781,"mtime":1610315132442,"results":"36","hashOfConfig":"31"},{"size":854,"mtime":1610243676833,"results":"37","hashOfConfig":"31"},{"size":60,"mtime":1610243676833,"results":"38","hashOfConfig":"31"},{"size":426,"mtime":1610247906346,"results":"39","hashOfConfig":"31"},{"size":422,"mtime":1610247906347,"results":"40","hashOfConfig":"31"},{"size":627,"mtime":1610305536206,"results":"41","hashOfConfig":"31"},{"size":605,"mtime":1610305536206,"results":"42","hashOfConfig":"31"},{"size":370,"mtime":1610251405636,"results":"43","hashOfConfig":"31"},{"size":1689,"mtime":1610300976261,"results":"44","hashOfConfig":"31"},{"size":1358,"mtime":1610250461643,"results":"45","hashOfConfig":"31"},{"size":675,"mtime":1610250461643,"results":"46","hashOfConfig":"31"},{"size":820,"mtime":1610302717155,"results":"47","hashOfConfig":"31"},{"size":765,"mtime":1610250461645,"results":"48","hashOfConfig":"31"},{"size":1345,"mtime":1610317493675,"results":"49","hashOfConfig":"31"},{"size":1354,"mtime":1610317559536,"results":"50","hashOfConfig":"31"},{"size":831,"mtime":1610254283720,"results":"51","hashOfConfig":"31"},{"size":934,"mtime":1610254283719,"results":"52","hashOfConfig":"31"},{"size":687,"mtime":1610254283720,"results":"53","hashOfConfig":"31"},{"size":913,"mtime":1610256252767,"results":"54","hashOfConfig":"31"},{"size":787,"mtime":1610302689593,"results":"55","hashOfConfig":"31"},{"size":1031,"mtime":1610256252766,"results":"56","hashOfConfig":"31"},{"size":1956,"mtime":1610305536205,"results":"57","hashOfConfig":"31"},{"size":426,"mtime":1610315150835,"results":"58","hashOfConfig":"31"},{"size":80,"mtime":1610305529184,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"90f41e",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeyp/Development/twitch-project/client/src/index.tsx",[],["127","128"],"/Users/joeyp/Development/twitch-project/client/src/App.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/store/rootStore.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/genre/GenreReducer.ts",["129"],"import { defaultCipherList } from 'constants'\nimport { GET_GENRES_FAILURE, GET_GENRES_REQUEST, GET_GENRES_SUCCESS, GenreActionTypes } from './models/actions'\nimport {Genre} from './models/Genre'\n\ninterface GenreState {\n    load: boolean;\n    genres: Genre[];\n    err: string;\n}\n\nconst defaultState: GenreState = {\n    load: false,\n    genres: [],\n    err: ''\n}\n\nexport const genreReducer = (state = defaultState, action: GenreActionTypes): GenreState => {\n    switch(action.type){\n        case GET_GENRES_REQUEST:\n            return {load: true, genres: [], err: ''}\n        case GET_GENRES_SUCCESS:\n            return {load: false, genres: action.genres, err: ''}\n        case GET_GENRES_FAILURE:\n            return {load: false, genres: [], err: action.err}\n        default:\n            return state\n    }\n}","/Users/joeyp/Development/twitch-project/client/src/store/genre/models/actions.ts",[],"/Users/joeyp/Development/twitch-project/client/src/containers/Sidebar.tsx",["130"],"import React, { ChangeEvent, Component } from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport {ThunkDispatch} from 'redux-thunk'\nimport { Genre } from '../store/genre/models/Genre'\nimport { AppState } from '../store/rootStore'\nimport {AppActions} from '../store/models/actions'\nimport { boundGenres } from '../store/genre/GenreAction'\nimport { boundProducers } from '../store/producer/ProducerAction'\nimport AudioList from '../components/AudioList'\nimport { List } from '@material-ui/core'\nimport ProducerSearch from '../components/ProducerSearch'\nimport GenreSearch from '../components/GenreSearch'\nimport { Producer } from '../store/producer/models/Producer'\nimport { boundAudios } from '../store/audio/AudioAction'\nimport { Audio } from '../store/audio/models/Audio'\n\n\n\ninterface Props {}\n\ninterface LinkStateProps {\n    genres: Genre[],\n    producers: Producer[];\n    audios: Audio[];\n}\n\ninterface LinkDispatchProps {\n    boundGenres: () => void;\n    boundProducers: () => void;\n    boundAudios: () => void;\n}\n\ntype LinkProps = LinkStateProps & LinkDispatchProps & Props\n\nclass Sidebar extends Component<LinkProps>{\n\n    state = {\n        genreInput: \"\",\n        producerInput: \"\"\n    }\n\n    componentDidMount(){\n        this.props.boundGenres()\n        this.props.boundProducers()\n        this.props.boundAudios()\n    }\n\n    renderAudios = () => {\n        return [...this.props.audios].map(audio => <AudioList key={audio.id} title={audio.title}/>)\n    }\n\n    renderAudio = (e: any) => {\n        const audio = [...this.props.audios].find(audio => audio.title === e.target.id)\n    }\n\n    onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render(): JSX.Element{\n        return (\n            <aside>\n                <GenreSearch genreInput={this.state.genreInput} genres={this.props.genres} genreChangeHandler={this.onChangeHandler} />\n                <ProducerSearch producerInput={this.state.producerInput} producers={this.props.producers} producerChangeHandler={this.onChangeHandler}/>\n               <List component=\"nav\" style={{ textAlign: 'center'}}>\n                    {this.renderAudios()}\n               </List>\n\n               \n            </aside>\n        )\n    }\n}\n\nconst msp = (state: AppState): LinkStateProps => ({\n    genres: state.genreReducer.genres,\n    producers: state.producerReducer.producers,\n    audios: state.audioReducer.audios\n})\n\nconst mdp = (dispatch: ThunkDispatch<AppState, {}, AppActions>) => ({\n    boundGenres: bindActionCreators(boundGenres, dispatch),\n    boundProducers: bindActionCreators(boundProducers, dispatch),\n    boundAudios: bindActionCreators(boundAudios, dispatch)\n})\nexport default connect(msp, mdp)(Sidebar)","/Users/joeyp/Development/twitch-project/client/src/store/genre/GenreAction.ts",["131"],"import {Dispatch} from 'redux'\nimport {AppActions} from '../models/actions'\nimport { GET_GENRES_FAILURE, GET_GENRES_REQUEST, GET_GENRES_SUCCESS } from './models/actions'\nimport { Genre } from './models/Genre'\n\nconst requestGenres = (): AppActions => ({\n    type: GET_GENRES_REQUEST,\n    load: true,\n    genres: [],\n    err: ''\n})\n\nconst setGenres = (genres: Genre[]): AppActions => ({\n    type: GET_GENRES_SUCCESS,\n    load: false,\n    genres: genres,\n    err: ''\n})\n\nconst invalidGenres = (): AppActions => ({\n    type: GET_GENRES_FAILURE,\n    load: false,\n    genres: [],\n    err: \"Unable to fetch genres\"\n})\n\nexport const boundGenres = () => {\n    return (dispatch: Dispatch<AppActions>) => {\n        dispatch(requestGenres())\n        return fetch('api/genres')\n        .then(r => r.json())\n        .then(genres => dispatch(setGenres(genres)))\n    }\n}","/Users/joeyp/Development/twitch-project/client/src/store/genre/models/Genre.ts",[],"/Users/joeyp/Development/twitch-project/client/src/components/GenreCard.tsx",[],["132","133"],"/Users/joeyp/Development/twitch-project/client/src/components/Navbar.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/components/ProducerSearch.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/components/GenreSearch.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/containers/BodyContainer.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/containers/ContributionsContainer.tsx",["134"],"import { Container, Modal } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport ContributionCard from '../components/ContributionCard'\nimport CreateContributionForm from '../components/CreateContributionForm'\nimport { boundContributions } from '../store/contribution/ContributionAction'\nimport { Contribution } from '../store/contribution/models/Contribution'\nimport { AppActions } from '../store/models/actions'\nimport { AppState } from '../store/rootStore'\n\ninterface Props {}\n\ninterface LinkStateProps {\n    contributions: Contribution[]\n}\n\ninterface LinkDispatchProps {\n    boundContributions: () => void;\n}\n\ntype LinkProps = LinkStateProps & LinkDispatchProps & Props\n\nclass ContributionsContainer extends Component<LinkProps>{\n\n    componentDidMount(){\n        this.props.boundContributions()\n    }\n\n\n    renderContributions = () => {\n        return [...this.props.contributions].map(c => <ContributionCard key={c.id} comment={c.comment} track={c.track} isAccepted={c.isAccepted} date={c.date}/>)\n    }\n    render() {\n        return (\n            <Container fixed>\n                {this.renderContributions()}\n                    <CreateContributionForm />\n                \n            </Container>\n        )\n    }\n}\n\nconst msp = (state: AppState): LinkStateProps => ({\n    contributions: state.contributionReducer.contributions\n})\n\nconst mdp = (dispatch: ThunkDispatch<AppState, {}, AppActions>) => ({\n    boundContributions: bindActionCreators(boundContributions, dispatch)\n})\n\nexport default connect(msp, mdp)(ContributionsContainer)\n","/Users/joeyp/Development/twitch-project/client/src/containers/AudioContainer.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/components/AudioCard.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/components/ContributionCard.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/store/audio/AudioReducer.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/audio/models/actions.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/audio/AudioAction.ts",["135"],"/Users/joeyp/Development/twitch-project/client/src/store/producer/ProducerReducer.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/producer/ProducerAction.ts",["136"],"import { Dispatch } from \"react\";\nimport { AppActions } from \"../models/actions\";\nimport { GET_PRODUCERS_FAILURE, GET_PRODUCERS_REQUEST, GET_PRODUCERS_SUCCESS } from \"./models/actions\";\nimport { Producer } from \"./models/Producer\";\n\nconst requestProducers = (): AppActions => ({\n    type: GET_PRODUCERS_REQUEST,\n    load: true,\n    producers: [],\n    err: ''\n})\n\nconst setProducers = (producers: Producer[]): AppActions => ({\n    type: GET_PRODUCERS_SUCCESS,\n    load: false,\n    producers: producers,\n    err: ''\n})\n\nconst invalidProducers = (): AppActions => ({\n    type: GET_PRODUCERS_FAILURE,\n    load: false,\n    producers: [],\n    err: \"Unable to fetch producers\"\n})\n\nexport const boundProducers = () => {\n    return (dispatch: Dispatch<AppActions>) => {\n        dispatch(requestProducers())\n        return fetch('api/producers')\n        .then(r => r.json())\n        .then(producers => dispatch(setProducers(producers)))\n    }\n}","/Users/joeyp/Development/twitch-project/client/src/store/producer/models/actions.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/contribution/ContributionReducer.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/contribution/models/actions.ts",[],"/Users/joeyp/Development/twitch-project/client/src/store/contribution/ContributionAction.ts",["137"],"import { Dispatch } from \"react\";\nimport { AppActions } from \"../models/actions\";\nimport { GET_CONTRIBUTIONS_FAILURE, GET_CONTRIBUTIONS_REQUEST, GET_CONTRIBUTIONS_SUCCESS } from \"./models/actions\";\nimport { Contribution } from \"./models/Contribution\";\n\nconst requestContributions = (): AppActions => ({\n    type: GET_CONTRIBUTIONS_REQUEST,\n    load: true,\n    contributions: [],\n    err: ''\n})\n\nconst setContributions = (contributions: Contribution[]): AppActions => ({\n    type: GET_CONTRIBUTIONS_SUCCESS,\n    load: false,\n    contributions: contributions,\n    err: ''\n})\n\nconst invalidContributions = (): AppActions => ({\n    type: GET_CONTRIBUTIONS_FAILURE,\n    load: false,\n    contributions: [],\n    err: 'Unable to fetch contributions'\n})\n\nexport const boundContributions = () => {\n    return (dispatch: Dispatch<AppActions>) => {\n        dispatch(requestContributions())\n        return fetch('api/contributions')\n        .then(r => r.json())\n        .then(contributions => dispatch(setContributions(contributions)))\n    }\n}\n","/Users/joeyp/Development/twitch-project/client/src/components/CreateContributionForm.tsx",["138"],"import { Button, DialogActions, DialogContentText, DialogTitle } from '@material-ui/core'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport TextField from '@material-ui/core/TextField'\nimport React, { ChangeEvent } from 'react'\n\nexport default function CreateContributionForm() {\n    const [open, setOpen] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleSubmit = (e: any) => {\n        debugger\n        console.log(e)\n        fetch('api/contributions/', {\n            method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n\n            })\n        })\n    }\n\n    return (\n        <div>\n           <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n               Add Contribution\n           </Button>\n           <Dialog open={open} onClose={handleClose}aria-labelledby=\"form-dialog-title\">\n               <form onSubmit={handleSubmit}>\n               <DialogTitle id=\"form-dialog-title\">Add Your Contribution Here</DialogTitle>\n                <DialogContent>\n                        <DialogContentText>\n                            Please fill out every section below. This will be sent to the producer who must approve before the audio can be updated.\n                        </DialogContentText>\n                        <TextField margin=\"dense\" name=\"comment\" label=\"Description\" type=\"text\" fullWidth />\n\n                        <TextField margin=\"dense\" name=\"audio\" label=\"MP3 File\" type=\"text\" fullWidth/>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    )\n}\n","/Users/joeyp/Development/twitch-project/client/src/components/AudioList.tsx",[],"/Users/joeyp/Development/twitch-project/client/src/store/audio/models/Audio.ts",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"147","line":54,"column":15,"nodeType":"145","messageId":"146","endLine":54,"endColumn":20},{"ruleId":"143","severity":1,"message":"148","line":20,"column":7,"nodeType":"145","messageId":"146","endLine":20,"endColumn":20},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"151","line":1,"column":21,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"152","line":22,"column":7,"nodeType":"145","messageId":"146","endLine":22,"endColumn":20},{"ruleId":"143","severity":1,"message":"153","line":20,"column":7,"nodeType":"145","messageId":"146","endLine":20,"endColumn":23},{"ruleId":"143","severity":1,"message":"154","line":20,"column":7,"nodeType":"145","messageId":"146","endLine":20,"endColumn":27},{"ruleId":"143","severity":1,"message":"155","line":5,"column":17,"nodeType":"145","messageId":"146","endLine":5,"endColumn":28},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'defaultCipherList' is defined but never used.","Identifier","unusedVar","'audio' is assigned a value but never used.","'invalidGenres' is assigned a value but never used.",["156"],["157"],"'Modal' is defined but never used.","'invalidAudios' is assigned a value but never used.","'invalidProducers' is assigned a value but never used.","'invalidContributions' is assigned a value but never used.","'ChangeEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]